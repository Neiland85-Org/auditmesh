name: 🔍 Pull Request Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  pull_request_target:
    branches: [ main, develop ]

permissions:
  contents: read
  pull-requests: read
  security-events: write
  actions: read

jobs:
  pr-validation:
    name: 🔍 PR Validation
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Ejecutar linting de Markdown
        run: |
          echo "🔍 Running markdown linting..."
          npm install -g markdownlint-cli
          markdownlint "**/*.md" || true

      - name: 🐍 Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 🔒 Run Security Scan
        run: |
          echo "🔒 Running security scan..."
          pip install bandit safety
          bandit -r . -f json -o security-report.json || true
          safety check --json --output safety-report.json || true
          echo "✅ Security scan completed"

      - name: 📊 Upload Security Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-reports-pr
          path: |
            security-report.json
            safety-report.json

  test-pr:
    name: 🧪 Test PR Changes
    runs-on: ubuntu-latest
    needs: pr-validation
    strategy:
      matrix:
        service: [gateway, lie-detector, auditor]
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🟢 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: services/ms-${{ matrix.service }}/package-lock.json

      - name: 📦 Install dependencies
        run: |
          cd services/ms-${{ matrix.service }}
          npm ci

      - name: 🧪 Run tests
        run: |
          cd services/ms-${{ matrix.service }}
          npm test -- --coverage --ci --watchAll=false

      - name: 📊 Upload coverage reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-pr-${{ matrix.service }}
          path: services/ms-${{ matrix.service }}/coverage/

  code-review:
    name: 📝 Code Review
    runs-on: ubuntu-latest
    needs: [pr-validation, test-pr]
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

      - name: 📊 Generate PR Summary
        run: |
          echo "## 📊 PR Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Checks Completed:" >> $GITHUB_STEP_SUMMARY
          echo "- Markdown linting" >> $GITHUB_STEP_SUMMARY
          echo "- Security scanning" >> $GITHUB_STEP_SUMMARY
          echo "- Unit testing" >> $GITHUB_STEP_SUMMARY
          echo "- CodeQL analysis" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🚀 Ready for Review!" >> $GITHUB_STEP_SUMMARY
