version: '3.8'

networks:
  auditmesh-net:
    driver: bridge

services:
  # Web Frontend Service
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: auditmesh-web
    ports:
      - "3001:80"
    environment:
      - VITE_API_BASE=http://ms-gateway:3000
      - VITE_APP_NAME=AuditMesh
      - VITE_APP_VERSION=1.0.0
      - VITE_NODE_ENV=production
      - VITE_ENABLE_3D_VISUALIZATION=true
      - VITE_ENABLE_REAL_TIME_UPDATES=true
      - VITE_AUTH_ENABLED=false
      - VITE_AUTH_PROVIDER=local
    networks:
      - auditmesh-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - ms-gateway

  # Microservices Gateway (placeholder - assuming it exists)
  ms-gateway:
    image: auditmesh/gateway:latest
    container_name: auditmesh-gateway
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
    networks:
      - auditmesh-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database (placeholder - assuming PostgreSQL)
  database:
    image: postgres:15-alpine
    container_name: auditmesh-db
    environment:
      - POSTGRES_DB=auditmesh
      - POSTGRES_USER=auditmesh_user
      - POSTGRES_PASSWORD=auditmesh_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - auditmesh-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U auditmesh_user -d auditmesh"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache (optional)
  redis:
    image: redis:7-alpine
    container_name: auditmesh-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - auditmesh-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
